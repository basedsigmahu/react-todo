{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devan\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Store all tasks\n  const [editMode, setEditMode] = useState(false); // Track whether we are in edit mode\n  const [editTaskIndex, setEditTaskIndex] = useState(null); // Track the index of the task being edited\n  const [showModal, setShowModal] = useState(false); // Control modal visibility\n  const [filter, setFilter] = useState('all'); // Track which filter tab is active\n\n  // Load tasks from local storage on initial render\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasksData')) || [];\n    setTasks(storedTasks);\n  }, []);\n\n  // Save tasks to local storage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem('tasksData', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Handle adding or editing a task\n  const handleAddOrEditTask = newTask => {\n    if (editMode) {\n      const updatedTasks = [...tasks];\n      updatedTasks[editTaskIndex] = newTask;\n      setTasks(updatedTasks);\n    } else {\n      setTasks([...tasks, newTask]);\n    }\n    setShowModal(false);\n    setEditMode(false);\n    setEditTaskIndex(null);\n  };\n\n  // Delete a task\n  const handleDeleteTask = index => {\n    const updatedTasks = tasks.filter((task, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n\n  // Filter tasks based on active filter\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'all') return true;\n    if (filter === 'completed') return task.status === 'completed';\n    if (filter === 'pending') return task.status === 'pending';\n    if (filter === 'important') return task.isImportant;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt\",\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-task\",\n        onClick: () => setShowModal(true),\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-of-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'all' ? 'active' : '',\n          onClick: () => setFilter('all'),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'important' ? 'active' : '',\n          onClick: () => setFilter('important'),\n          children: \"Important\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'pending' ? 'active' : '',\n          onClick: () => setFilter('pending'),\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === 'completed' ? 'active' : '',\n          onClick: () => setFilter('completed'),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        onDelete: handleDeleteTask,\n        onEdit: index => {\n          setEditMode(true);\n          setEditTaskIndex(index);\n          setShowModal(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(TaskForm, {\n        onSubmit: handleAddOrEditTask,\n        closeModal: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+sFSiL1gLy1+y/4P8bE5kwIGkas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","editMode","setEditMode","editTaskIndex","setEditTaskIndex","showModal","setShowModal","filter","setFilter","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","handleAddOrEditTask","newTask","updatedTasks","handleDeleteTask","index","task","i","filteredTasks","status","isImportant","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","onEdit","onSubmit","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/devan/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([]); // Store all tasks\n  const [editMode, setEditMode] = useState(false); // Track whether we are in edit mode\n  const [editTaskIndex, setEditTaskIndex] = useState(null); // Track the index of the task being edited\n  const [showModal, setShowModal] = useState(false); // Control modal visibility\n  const [filter, setFilter] = useState('all'); // Track which filter tab is active\n\n  // Load tasks from local storage on initial render\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasksData')) || [];\n    setTasks(storedTasks);\n  }, []);\n\n  // Save tasks to local storage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem('tasksData', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Handle adding or editing a task\n  const handleAddOrEditTask = (newTask) => {\n    if (editMode) {\n      const updatedTasks = [...tasks];\n      updatedTasks[editTaskIndex] = newTask;\n      setTasks(updatedTasks);\n    } else {\n      setTasks([...tasks, newTask]);\n    }\n    setShowModal(false);\n    setEditMode(false);\n    setEditTaskIndex(null);\n  };\n\n  // Delete a task\n  const handleDeleteTask = (index) => {\n    const updatedTasks = tasks.filter((task, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n\n  // Filter tasks based on active filter\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === 'all') return true;\n    if (filter === 'completed') return task.status === 'completed';\n    if (filter === 'pending') return task.status === 'pending';\n    if (filter === 'important') return task.isImportant;\n    return true;\n  });\n\n  return (\n    <div id=\"wrapper\">\n      <div className=\"container\">\n        <div className=\"txt\">To-Do List</div>\n        <hr />\n        <button className=\"create-task\" onClick={() => setShowModal(true)}>Create Task</button>\n        <hr />\n\n        {/* Tabs */}\n        <div className=\"state-of-task\">\n          <button className={filter === 'all' ? 'active' : ''} onClick={() => setFilter('all')}>All</button>\n          <button className={filter === 'important' ? 'active' : ''} onClick={() => setFilter('important')}>Important</button>\n          <button className={filter === 'pending' ? 'active' : ''} onClick={() => setFilter('pending')}>Pending</button>\n          <button className={filter === 'completed' ? 'active' : ''} onClick={() => setFilter('completed')}>Completed</button>\n        </div>\n\n        {/* Task List */}\n        <TaskList tasks={filteredTasks} onDelete={handleDeleteTask} onEdit={(index) => {\n          setEditMode(true);\n          setEditTaskIndex(index);\n          setShowModal(true);\n        }} />\n\n        {/* Modal Form */}\n        {showModal && <TaskForm onSubmit={handleAddOrEditTask} closeModal={() => setShowModal(false)} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}